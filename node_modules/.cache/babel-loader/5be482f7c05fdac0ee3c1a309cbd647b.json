{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/Dashboard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchLocationsSuccess } from \"../actions/location\";\nimport { fetchStatSuccess } from \"../actions/stat\";\nimport { fetchCitiesSuccess } from \"../actions/city\";\nimport { currentUser } from \"../actions/auth\";\nimport ClimateMap from \"./ClimateMap\";\nimport climScores from \"./climScores.json\";\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      climateScores: climScores\n    };\n  }\n\n  componentDidMount() {\n    // const token = localStorage.getItem(\"token\");\n    // if (!token) {\n    //   this.props.history.push(\"/login\");\n    // } else {\n    // const reqObj = {\n    //   method: \"GET\",\n    //   headers: {\n    //     Authorization: `Bearer ${token}`,\n    //   },\n    // };\n    // fetch(\"http://localhost:3001/current_user\", reqObj)\n    //   .then((resp) => resp.json())\n    //   .then((data) => {\n    //     this.props.currentUser(data);\n    //   });\n    fetch(\"https://api.waqi.info/map/bounds/?latlng=85,-180,-85.05115,180&token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c\").then(resp => resp.json()).then(stations => {\n      let y = stations.data;\n      let x = stations.data.slice(0, 4500);\n      this.props.fetchStatSuccess(y);\n    }); // }\n  }\n\n  render() {\n    if (this.props.stats.length !== 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ClimateMap, {\n        cities: this.props.cities,\n        climateScores: this.state.climateScores,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return null;\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    current_user: state.currentUser,\n    locations: state.locations,\n    stats: state.stats,\n    cities: state.cities\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchLocationsSuccess,\n  fetchStatSuccess,\n  fetchCitiesSuccess,\n  currentUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/Dashboard.js"],"names":["React","connect","fetchLocationsSuccess","fetchStatSuccess","fetchCitiesSuccess","currentUser","ClimateMap","climScores","Dashboard","Component","state","climateScores","componentDidMount","fetch","then","resp","json","stations","y","data","x","slice","props","render","stats","length","cities","mapStateToProps","auth","current_user","locations","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,aAAa,EAAEJ;AADT,KAD8B;AAAA;;AAKtCK,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,KAAK,CACH,+GADG,CAAL,CAGGC,IAHH,CAGSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAHlB,EAIGF,IAJH,CAISG,QAAD,IAAc;AAClB,UAAIC,CAAC,GAAGD,QAAQ,CAACE,IAAjB;AACA,UAAIC,CAAC,GAAGH,QAAQ,CAACE,IAAT,CAAcE,KAAd,CAAoB,CAApB,EAAuB,IAAvB,CAAR;AACA,WAAKC,KAAL,CAAWnB,gBAAX,CAA4Be,CAA5B;AACD,KARH,EAhBgB,CAyBlB;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MADrB;AAEE,QAAA,aAAa,EAAE,KAAKhB,KAAL,CAAWC,aAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD,KATD,MASO;AACL,aAAO,IAAP;AACD;AACF;;AA9CqC;;AAiDxC,MAAMgB,eAAe,GAAIjB,KAAD,IAAW;AACjC,SAAO;AACLkB,IAAAA,IAAI,EAAElB,KAAK,CAACkB,IADP;AAELC,IAAAA,YAAY,EAAEnB,KAAK,CAACL,WAFf;AAGLyB,IAAAA,SAAS,EAAEpB,KAAK,CAACoB,SAHZ;AAILN,IAAAA,KAAK,EAAEd,KAAK,CAACc,KAJR;AAKLE,IAAAA,MAAM,EAAEhB,KAAK,CAACgB;AALT,GAAP;AAOD,CARD;;AAUA,MAAMK,kBAAkB,GAAG;AACzB7B,EAAAA,qBADyB;AAEzBC,EAAAA,gBAFyB;AAGzBC,EAAAA,kBAHyB;AAIzBC,EAAAA;AAJyB,CAA3B;AAOA,eAAeJ,OAAO,CAAC0B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CvB,SAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchLocationsSuccess } from \"../actions/location\";\nimport { fetchStatSuccess } from \"../actions/stat\";\nimport { fetchCitiesSuccess } from \"../actions/city\";\nimport { currentUser } from \"../actions/auth\";\nimport ClimateMap from \"./ClimateMap\";\nimport climScores from \"./climScores.json\";\n\nclass Dashboard extends React.Component {\n  state = {\n    climateScores: climScores,\n  };\n\n  componentDidMount() {\n    // const token = localStorage.getItem(\"token\");\n    // if (!token) {\n    //   this.props.history.push(\"/login\");\n    // } else {\n      // const reqObj = {\n      //   method: \"GET\",\n      //   headers: {\n      //     Authorization: `Bearer ${token}`,\n      //   },\n      // };\n      // fetch(\"http://localhost:3001/current_user\", reqObj)\n      //   .then((resp) => resp.json())\n      //   .then((data) => {\n      //     this.props.currentUser(data);\n      //   });\n      fetch(\n        \"https://api.waqi.info/map/bounds/?latlng=85,-180,-85.05115,180&token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c\"\n      )\n        .then((resp) => resp.json())\n        .then((stations) => {\n          let y = stations.data;\n          let x = stations.data.slice(0, 4500);\n          this.props.fetchStatSuccess(y);\n        });\n    // }\n  }\n\n  render() {\n    if (this.props.stats.length !== 0) {\n      return (\n        <div>\n          <ClimateMap\n            cities={this.props.cities}\n            climateScores={this.state.climateScores}\n          />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    current_user: state.currentUser,\n    locations: state.locations,\n    stats: state.stats,\n    cities: state.cities,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchLocationsSuccess,\n  fetchStatSuccess,\n  fetchCitiesSuccess,\n  currentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}