{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/LandingPage.js\";\nimport React from \"react\";\nimport { Fade } from \"react-reveal\";\nimport Clymanew from \"../images/Clymanew.png\";\nimport Particles from \"react-particles-js\";\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from \"react-places-autocomplete\";\n\nclass LandingPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: \"\"\n    };\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log(\"Success\", latLng)).catch(error => console.error(\"Error\", error));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Fade, {\n      left: true,\n      duration: 2000,\n      distance: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontFamily: \"Audiowide\",\n        fontSize: \"35pt\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Introducing\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lp-logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"650px\"\n      },\n      src: Clymanew,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slogan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Fade, {\n      left: true,\n      duration: 2000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Access real-time air quality readings and forecasts from anywhere in the world.\"))), /*#__PURE__*/React.createElement(Fade, {\n      right: true,\n      duration: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: \"Search Places ...\",\n      className: \"location-search-input\"\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      // const className = suggestion.active\n      //   ? \"suggestion-item--active\"\n      //   : \"suggestion-item\";\n      // inline style for demonstration purpose\n      const style = suggestion.active ? {\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n      } : {\n        backgroundColor: \"#ffffff\",\n        cursor: \"pointer\"\n      };\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 27\n        }\n      }, suggestion.description));\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"part-cntr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      canvasClassName: \"particles\",\n      params: {\n        particles: {\n          number: {\n            value: 60,\n            density: {\n              enable: true,\n              value_area: 1500\n            }\n          },\n          line_linked: {\n            enable: true,\n            opacity: 0.1\n          },\n          move: {\n            direction: \"right\",\n            speed: 0.1\n          },\n          size: {\n            value: 1\n          },\n          opacity: {\n            anim: {\n              enable: true,\n              speed: 1,\n              opacity_min: 0.05\n            }\n          }\n        },\n        interactivity: {\n          events: {\n            onhover: {\n              enable: true,\n              mode: \"connect\"\n            },\n            onclick: {\n              enable: true,\n              mode: \"push\"\n            }\n          },\n          modes: {\n            push: {\n              particles_nb: 1\n            },\n            connect: {\n              opacity: 5\n            }\n          }\n        },\n        retina_detect: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://www.tmrow.com/static/5c33e6e4f32b13a7a70c2a4612f31647/097fa/climatestage-background1.jpg\",\n      alt: \"bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // const WrappedContainer = GoogleApiWrapper({\n//   apiKey: \"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\",\n// })(LandingPage);\n// export default (WrappedContainer);\n\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/LandingPage.js"],"names":["React","Fade","Clymanew","Particles","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","LandingPage","Component","state","address","handleChange","setState","handleSelect","then","results","latLng","console","log","catch","error","render","fontFamily","fontSize","width","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","style","active","backgroundColor","cursor","description","height","particles","number","value","density","enable","value_area","line_linked","opacity","move","direction","speed","size","anim","opacity_min","interactivity","events","onhover","mode","onclick","modes","push","particles_nb","connect","retina_detect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Fade } from \"react-reveal\";\nimport Clymanew from \"../images/Clymanew.png\";\nimport Particles from \"react-particles-js\";\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport {\n  geocodeByAddress,\n  geocodeByPlaceId,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nclass LandingPage extends React.Component {\n  state = {\n    address: \"\",\n  };\n\n  handleChange = (address) => {\n    this.setState({ address });\n  };\n\n  handleSelect = (address) => {\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => console.log(\"Success\", latLng))\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  render() {\n    return (\n      <div>\n        <Fade left duration={2000} distance=\"40px\">\n          <div className=\"intro\">\n            <h1 style={{ fontFamily: \"Audiowide\", fontSize: \"35pt\" }}>\n              Introducing\n            </h1>\n          </div>\n          <div className=\"lp-logo\">\n            <img style={{ width: \"650px\" }} src={Clymanew} alt=\"logo\"></img>\n          </div>\n        </Fade>\n        <div className=\"slogan\">\n          <Fade left duration={2000}>\n            <h2>\n              Access real-time air quality readings and forecasts from anywhere\n              in the world.\n            </h2>\n          </Fade>\n        </div>\n\n        <Fade right duration={1000}>\n          <div className=\"landing-search\">\n            <PlacesAutocomplete\n              value={this.state.address}\n              onChange={this.handleChange}\n              onSelect={this.handleSelect}\n            >\n              {({\n                getInputProps,\n                suggestions,\n                getSuggestionItemProps,\n                loading,\n              }) => (\n                <div>\n                  <input\n                    {...getInputProps({\n                      placeholder: \"Search Places ...\",\n                      className: \"location-search-input\",\n                    })}\n                  />\n                  <div className=\"autocomplete-dropdown-container\">\n                    {loading && <div>Loading...</div>}\n                    {suggestions.map((suggestion) => {\n                      // const className = suggestion.active\n                      //   ? \"suggestion-item--active\"\n                      //   : \"suggestion-item\";\n                      // inline style for demonstration purpose\n                      const style = suggestion.active\n                        ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                        : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                      return (\n                        <div\n                          {...getSuggestionItemProps(suggestion, {\n                            className,\n                            style,\n                          })}\n                        >\n                          <span>{suggestion.description}</span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </PlacesAutocomplete>\n          </div>\n        </Fade>\n        <div class=\"part-cntr\">\n          <Particles\n            style={{ width: \"100%\", height: \"100%\" }}\n            canvasClassName={\"particles\"}\n            params={{\n              particles: {\n                number: {\n                  value: 60,\n                  density: {\n                    enable: true,\n                    value_area: 1500,\n                  },\n                },\n                line_linked: {\n                  enable: true,\n                  opacity: 0.1,\n                },\n                move: {\n                  direction: \"right\",\n                  speed: 0.1,\n                },\n                size: {\n                  value: 1,\n                },\n                opacity: {\n                  anim: {\n                    enable: true,\n                    speed: 1,\n                    opacity_min: 0.05,\n                  },\n                },\n              },\n              interactivity: {\n                events: {\n                  onhover: {\n                    enable: true,\n                    mode: \"connect\",\n                  },\n                  onclick: {\n                    enable: true,\n                    mode: \"push\",\n                  },\n                },\n                modes: {\n                  push: {\n                    particles_nb: 1,\n                  },\n                  connect: {\n                    opacity: 5,\n                  },\n                },\n              },\n              retina_detect: true,\n            }}\n          />\n        </div>\n        <img\n          src=\"https://www.tmrow.com/static/5c33e6e4f32b13a7a70c2a4612f31647/097fa/climatestage-background1.jpg\"\n          alt=\"bg\"\n        ></img>\n      </div>\n    );\n  }\n}\n\n// const WrappedContainer = GoogleApiWrapper({\n//   apiKey: \"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\",\n// })(LandingPage);\n\n// export default (WrappedContainer);\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}