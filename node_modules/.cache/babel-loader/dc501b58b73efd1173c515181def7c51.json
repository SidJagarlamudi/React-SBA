{"ast":null,"code":"import _classCallCheck from\"/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{connect}from\"react-redux\";import{fetchLocationsSuccess}from\"../actions/location\";import{fetchStatSuccess}from\"../actions/stat\";import{fetchCitiesSuccess}from\"../actions/city\";import{currentUser}from\"../actions/auth\";import ClimateMap from\"./ClimateMap\";import climScores from\"./climScores.json\";var Dashboard=/*#__PURE__*/function(_React$Component){_inherits(Dashboard,_React$Component);var _super=_createSuper(Dashboard);function Dashboard(){var _this;_classCallCheck(this,Dashboard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={climateScores:climScores};return _this;}_createClass(Dashboard,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var token=localStorage.getItem(\"token\");if(!token){this.props.history.push(\"/login\");}else{var reqObj={method:\"GET\",headers:{Authorization:\"Bearer \".concat(token)}};fetch(\"http://localhost:3001/current_user\",reqObj).then(function(resp){return resp.json();}).then(function(data){_this2.props.currentUser(data);});fetch(\"https://api.waqi.info/map/bounds/?latlng=85,-180,-85.05115,180&token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c\").then(function(resp){return resp.json();}).then(function(stations){var y=stations.data;var x=stations.data.slice(0,4500);_this2.props.fetchStatSuccess(x);});}}},{key:\"render\",value:function render(){if(this.props.stats.length!==0){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ClimateMap,{cities:this.props.cities,climateScores:this.state.climateScores}));}else{return null;}}}]);return Dashboard;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,current_user:state.currentUser,locations:state.locations,stats:state.stats,cities:state.cities};};var mapDispatchToProps={fetchLocationsSuccess:fetchLocationsSuccess,fetchStatSuccess:fetchStatSuccess,fetchCitiesSuccess:fetchCitiesSuccess,currentUser:currentUser};export default connect(mapStateToProps,mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/Dashboard.js"],"names":["React","connect","fetchLocationsSuccess","fetchStatSuccess","fetchCitiesSuccess","currentUser","ClimateMap","climScores","Dashboard","state","climateScores","token","localStorage","getItem","props","history","push","reqObj","method","headers","Authorization","fetch","then","resp","json","data","stations","y","x","slice","stats","length","cities","Component","mapStateToProps","auth","current_user","locations","mapDispatchToProps"],"mappings":"4qBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,qBAAT,KAAsC,qBAAtC,CACA,OAASC,gBAAT,KAAiC,iBAAjC,CACA,OAASC,kBAAT,KAAmC,iBAAnC,CACA,OAASC,WAAT,KAA4B,iBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,C,GAEMC,CAAAA,S,mVACJC,K,CAAQ,CACNC,aAAa,CAAEH,UADT,C,kGAIY,iBAClB,GAAMI,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAI,CAACF,KAAL,CAAY,CACV,KAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EACD,CAFD,IAEO,CACL,GAAMC,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAE,KADK,CAEbC,OAAO,CAAE,CACPC,aAAa,kBAAYT,KAAZ,CADN,CAFI,CAAf,CAMAU,KAAK,CAAC,oCAAD,CAAuCJ,MAAvC,CAAL,CACGK,IADH,CACQ,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,EAAV,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACd,MAAI,CAACX,KAAL,CAAWT,WAAX,CAAuBoB,IAAvB,EACD,CAJH,EAKAJ,KAAK,CACH,+GADG,CAAL,CAGGC,IAHH,CAGQ,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,EAAV,EAHR,EAIGF,IAJH,CAIQ,SAACI,QAAD,CAAc,CAClB,GAAIC,CAAAA,CAAC,CAAGD,QAAQ,CAACD,IAAjB,CACA,GAAIG,CAAAA,CAAC,CAAGF,QAAQ,CAACD,IAAT,CAAcI,KAAd,CAAoB,CAApB,CAAuB,IAAvB,CAAR,CACA,MAAI,CAACf,KAAL,CAAWX,gBAAX,CAA4ByB,CAA5B,EACD,CARH,EASD,CACF,C,uCAEQ,CACP,GAAI,KAAKd,KAAL,CAAWgB,KAAX,CAAiBC,MAAjB,GAA4B,CAAhC,CAAmC,CACjC,mBACE,4CACE,oBAAC,UAAD,EACE,MAAM,CAAE,KAAKjB,KAAL,CAAWkB,MADrB,CAEE,aAAa,CAAE,KAAKvB,KAAL,CAAWC,aAF5B,EADF,CADF,CAQD,CATD,IASO,CACL,MAAO,KAAP,CACD,CACF,C,uBA9CqBV,KAAK,CAACiC,S,EAiD9B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACzB,KAAD,CAAW,CACjC,MAAO,CACL0B,IAAI,CAAE1B,KAAK,CAAC0B,IADP,CAELC,YAAY,CAAE3B,KAAK,CAACJ,WAFf,CAGLgC,SAAS,CAAE5B,KAAK,CAAC4B,SAHZ,CAILP,KAAK,CAAErB,KAAK,CAACqB,KAJR,CAKLE,MAAM,CAAEvB,KAAK,CAACuB,MALT,CAAP,CAOD,CARD,CAUA,GAAMM,CAAAA,kBAAkB,CAAG,CACzBpC,qBAAqB,CAArBA,qBADyB,CAEzBC,gBAAgB,CAAhBA,gBAFyB,CAGzBC,kBAAkB,CAAlBA,kBAHyB,CAIzBC,WAAW,CAAXA,WAJyB,CAA3B,CAOA,cAAeJ,CAAAA,OAAO,CAACiC,eAAD,CAAkBI,kBAAlB,CAAP,CAA6C9B,SAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchLocationsSuccess } from \"../actions/location\";\nimport { fetchStatSuccess } from \"../actions/stat\";\nimport { fetchCitiesSuccess } from \"../actions/city\";\nimport { currentUser } from \"../actions/auth\";\nimport ClimateMap from \"./ClimateMap\";\nimport climScores from \"./climScores.json\";\n\nclass Dashboard extends React.Component {\n  state = {\n    climateScores: climScores,\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      this.props.history.push(\"/login\");\n    } else {\n      const reqObj = {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n      fetch(\"http://localhost:3001/current_user\", reqObj)\n        .then((resp) => resp.json())\n        .then((data) => {\n          this.props.currentUser(data);\n        });\n      fetch(\n        \"https://api.waqi.info/map/bounds/?latlng=85,-180,-85.05115,180&token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c\"\n      )\n        .then((resp) => resp.json())\n        .then((stations) => {\n          let y = stations.data;\n          let x = stations.data.slice(0, 4500);\n          this.props.fetchStatSuccess(x);\n        });\n    }\n  }\n\n  render() {\n    if (this.props.stats.length !== 0) {\n      return (\n        <div>\n          <ClimateMap\n            cities={this.props.cities}\n            climateScores={this.state.climateScores}\n          />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    current_user: state.currentUser,\n    locations: state.locations,\n    stats: state.stats,\n    cities: state.cities,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchLocationsSuccess,\n  fetchStatSuccess,\n  fetchCitiesSuccess,\n  currentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}