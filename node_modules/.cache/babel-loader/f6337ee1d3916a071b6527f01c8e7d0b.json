{"ast":null,"code":"var _jsxFileName = \"/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/ClimateMap.js\";\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper, Map, Marker, InfoWindow } from \"google-maps-react\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport \"react-google-places-autocomplete/dist/index.min.css\";\nimport Geocode from \"react-geocode\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport mapStyles from \"./mapStyles\";\nimport Markers from \"./Markers\";\nimport { Line, Doughnut } from \"react-chartjs-2\";\nimport UserLocations from \"./UserLocations\";\nimport { createLocationSuccess } from \"../actions/location\";\nimport { connect } from \"react-redux\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport aqiTable from \"../images/aqiTable.png\";\nexport class ClimateMap extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchText: \"\",\n      showClimateScore: false,\n      coords: {\n        lat: -23.304354,\n        lng: 151.916417\n      },\n      address: \"Wilson Island, Australia\",\n      allScores: false,\n      showAQI: true,\n      hoveredPinStat: {},\n      hoveredCoords: {\n        lat: \"\",\n        lng: \"\"\n      },\n      showInfo: false,\n      activeMarker: {},\n      activeCSMarker: false,\n      data: false,\n      markersRendered: false,\n      showUserLocations: false,\n      hovered: false,\n      myLocations: [],\n      saveDisabled: false,\n      modalOpen: \"none\",\n      mapStyle: null\n    };\n\n    this.mouseEnterHandler = (marker, e) => {\n      this.setState({\n        hovered: true,\n        activeMarker: marker\n      });\n    };\n\n    this.mouseLeaveHandler = marker => {\n      this.setState({\n        hovered: false\n      });\n    };\n\n    this.onTimeout = () => {\n      fetch(`https://api.waqi.info/feed/geo:${this.state.activeMarker.info.lat};${this.state.activeMarker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        if (this.state.showUserLocations) {\n          this.setState({\n            data: data.data,\n            showUserLocations: false\n          });\n        } else {\n          this.setState({\n            data: data.data\n          });\n        }\n      });\n    };\n\n    this.clearTimer = () => {\n      clearTimeout(this.timer);\n    };\n\n    this.onMarkerDragEnd = coord => {\n      const {\n        latLng\n      } = coord;\n      const newLat = latLng.lat();\n      const newLon = latLng.lng();\n      this._score.state.coords.lat = newLat;\n      this._score.state.coords.lng = newLon;\n\n      this._map.map.setCenter({\n        lat: newLat,\n        lng: newLon\n      });\n\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(newLat, newLon).then(response => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress;\n      }, error => {\n        console.error(error);\n      });\n      fetch(`https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        this._score.state.aqi = data.data.aqi;\n      });\n    };\n\n    this.handleSubmit = value => {\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromAddress(`${value.description}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this.setState({\n          coords: {\n            lat: lat,\n            lng: lng\n          }\n        });\n\n        this._map.map.setCenter({\n          lat: lat,\n          lng: lng\n        });\n\n        this._search.clearValue();\n\n        fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\"\n          }\n        }).then(resp => resp.json()).then(data => {\n          this.setState({\n            allScores: {\n              ClimateScore: data.ClimateScore,\n              DroughtScore: data.DroughtScore,\n              FireScore: data.FireScore,\n              SeaLevelScore: data.SeaLevelScore,\n              StormScore: data.StormScore,\n              TempScore: data.TempScore\n            }\n          });\n        }).catch(err => {\n          this.setState({\n            allScores: false\n          });\n        });\n        Geocode.fromLatLng(lat, lng).then(response => {}, error => {\n          console.error(error);\n        });\n        fetch(`https://api.waqi.info/feed/geo:${lat};${lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(locationData => {\n          this.setState({\n            data: locationData.data\n          });\n        });\n      });\n    };\n\n    this.showClimateScore = marker => {\n      const newLat = marker.position.lat;\n      const newLon = marker.position.lng;\n      Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n      Geocode.fromLatLng(newLat, newLon).then(response => {\n        const newAddress = response.results[0].formatted_address;\n        this.setState({\n          address: newAddress,\n          activeCSMarker: marker\n        });\n      });\n    };\n\n    this.renderClimateScores = () => {\n      return this.props.climateScores.map(score => {\n        const numberString = score.ClimateScore.toString();\n        const google = this.props.google;\n        let iw = 83,\n            ih = 107;\n        return /*#__PURE__*/React.createElement(Marker, {\n          score: score,\n          onClick: this.showClimateScore,\n          position: {\n            lat: score.lat,\n            lng: score.lng\n          },\n          icon: {\n            url: `https://waqi.info/mapicon/${numberString}.50.png`,\n            anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n            size: new google.maps.Size(iw / 2, ih / 2),\n            scaledSize: new google.maps.Size(30, 40)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 9\n          }\n        });\n      });\n    };\n\n    this.labelClicked = e => {\n      if (e.nativeEvent.target.innerHTML === \"Climate Scoreâ„¢\") {\n        this.setState({\n          showAQI: false\n        });\n      } else {\n        this.setState({\n          showAQI: true,\n          activeCSMarker: false\n        });\n      }\n    };\n\n    this.mouseOut = e => {\n      this.setState({\n        showInfo: false\n      });\n    };\n\n    this.onMarkerClick = (marker, e) => {\n      fetch(`https://api.waqi.info/feed/geo:${marker.info.lat};${marker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        if (this.state.showUserLocations) {\n          this.setState({\n            data: data.data,\n            showUserLocations: false\n          });\n        } else {\n          this.setState({\n            data: data.data\n          });\n        }\n      });\n    };\n\n    this.onMarkerHover = (props, marker, e) => {\n      this.setState({\n        activeMarker: marker,\n        showInfo: true\n      });\n    };\n\n    this.addLocation = () => {\n      if (this.state.auth === null) {\n        alert('You must be logged in to use this feature.');\n      } else if (this.state.data !== false) {\n        const newLocation = {\n          name: this.state.data.city.name,\n          user_id: this.props.auth.id,\n          lat: this.state.data.city.geo[0],\n          lng: this.state.data.city.geo[1]\n        };\n        const reqObj = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(newLocation)\n        };\n        fetch(\"https://myclimate.herokuapp.com/locations\", reqObj).then(resp => resp.json()).then(newLocation => {\n          this.props.createLocationSuccess(newLocation);\n        });\n      }\n    };\n\n    this.goToLocation = location => {\n      this._map.map.setCenter({\n        lat: location.lat,\n        lng: location.lng\n      });\n\n      fetch(`https://api.waqi.info/feed/geo:${location.lat};${location.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`).then(resp => resp.json()).then(data => {\n        this.setState({\n          data: data.data,\n          showUserLocations: false\n        });\n      });\n    };\n\n    this.showMyList = () => {\n      this.setState({\n        showUserLocations: true\n      });\n    };\n\n    this.showStats = () => {\n      this.setState({\n        showUserLocations: false\n      });\n    };\n\n    this.openModal = () => {\n      this.setState({\n        modalOpen: \"block\"\n      });\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        modalOpen: \"none\"\n      });\n    };\n\n    this.timer = null;\n  }\n\n  componentWillUnmount() {\n    this.clearTimer();\n  }\n\n  componentDidUpdate() {\n    if (this.state.hovered) {\n      this.timer = setTimeout(this.onTimeout, 500);\n    } else {\n      this.clearTimer();\n    }\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      let currentLocation = {\n        lat: lat,\n        lng: lng\n      };\n      this.setState({\n        coords: currentLocation\n      });\n    });\n    console.log(this.props);\n  }\n\n  render() {\n    let aqiColor;\n\n    if (this.state.data !== false && this.state.data.aqi <= 50) {\n      aqiColor = \"#c1ff7a\";\n    } else if (this.state.data !== false && this.state.data.aqi <= 100) {\n      aqiColor = \"#ffff33\";\n    } else if (this.state.data !== false && this.state.data.aqi <= 150) {\n      aqiColor = \"#ffc570\";\n    } else if (this.state.data !== false && this.state.data.aqi <= 200) {\n      aqiColor = \"#f6685e\";\n    } else if (this.state.data !== false && this.state.data.aqi <= 300) {\n      aqiColor = \"#ea80fc\";\n    } else {\n      aqiColor = \"#b2b9e1\";\n    }\n\n    let climColor;\n\n    if (this.state.activeCSMarker !== false && this.state.activeCSMarker.score.ClimateScore <= 25) {\n      climColor = \"#c1ff7a\";\n    } else if (this.state.activeCSMarker !== false && this.state.activeCSMarker.score.ClimateScore <= 50) {\n      climColor = \"#ffff33\";\n    } else {\n      climColor = \"#ffc570\";\n    }\n\n    let o3Data;\n    let uviData;\n    let pm10Data;\n    let pm25Data;\n    let days;\n    let hours;\n    let minutes;\n    let droughtData;\n    let fireData;\n    let seaData;\n    let stormData;\n    let tempData;\n\n    if (this.state.activeCSMarker) {\n      droughtData = {\n        datasets: [{\n          data: [this.state.activeCSMarker.score.DroughtScore, 100 - this.state.activeCSMarker.score.DroughtScore],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"]\n        }]\n      };\n      fireData = {\n        datasets: [{\n          data: [this.state.activeCSMarker.score.FireScore, 100 - this.state.activeCSMarker.score.FireScore],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"]\n        }]\n      };\n      seaData = {\n        datasets: [{\n          data: [this.state.activeCSMarker.score.SeaLevelScore, 100 - this.state.activeCSMarker.score.SeaLevelScore],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"]\n        }]\n      };\n      stormData = {\n        datasets: [{\n          data: [this.state.activeCSMarker.score.StormScore, 100 - this.state.activeCSMarker.score.StormScore],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"]\n        }]\n      };\n      tempData = {\n        datasets: [{\n          data: [this.state.activeCSMarker.score.TempScore, 100 - this.state.activeCSMarker.score.TempScore],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"]\n        }]\n      };\n    }\n\n    if (this.state.data !== false) {\n      let now = new Date().getTime();\n      let newDate = new Date(this.state.data.time.iso).getTime();\n      let distance = newDate - now;\n      days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n\n      if (this.state.data.forecast.daily !== undefined && \"o3\" in this.state.data.forecast.daily) {\n        let labelArr = [],\n            avgArr = [],\n            minArr = [],\n            maxArr = [];\n\n        for (let i = 0; i < this.state.data.forecast.daily.o3.length; i++) {\n          labelArr.push(new Date(this.state.data.forecast.daily.o3[i].day).toString().substring(0, 10));\n          avgArr.push(this.state.data.forecast.daily.o3[i].avg);\n          minArr.push(this.state.data.forecast.daily.o3[i].min);\n          maxArr.push(this.state.data.forecast.daily.o3[i].max);\n        }\n\n        o3Data = {\n          labels: labelArr,\n          datasets: [{\n            label: \"max\",\n            backgroundColor: \"#f7ff66\",\n            borderColor: \"#f7ff66\",\n            borderWidth: 0,\n            data: maxArr,\n            fill: \"1\",\n            radius: 1\n          }, {\n            label: \"avg\",\n            backgroundColor: \"#4a9eff\",\n            borderColor: \"#4a9eff\",\n            borderWidth: 1,\n            data: avgArr,\n            fill: \"-1\",\n            line: false,\n            radius: 5\n          }, {\n            label: \"min\",\n            backgroundColor: \"#87ff9f\",\n            borderColor: \"#87ff9f\",\n            borderWidth: 0,\n            data: minArr,\n            line: false,\n            fill: \"1\",\n            radius: 1\n          }]\n        };\n      }\n\n      if (this.state.data.forecast.daily !== undefined && \"pm10\" in this.state.data.forecast.daily) {\n        let labelArr = [],\n            avgArr = [],\n            minArr = [],\n            maxArr = [];\n\n        for (let i = 0; i < this.state.data.forecast.daily.pm10.length; i++) {\n          labelArr.push(new Date(this.state.data.forecast.daily.pm10[i].day).toString().substring(0, 10));\n          avgArr.push(this.state.data.forecast.daily.pm10[i].avg);\n          minArr.push(this.state.data.forecast.daily.pm10[i].min);\n          maxArr.push(this.state.data.forecast.daily.pm10[i].max);\n        }\n\n        pm10Data = {\n          labels: labelArr,\n          datasets: [{\n            label: \"max\",\n            backgroundColor: \"#f7ff66\",\n            borderColor: \"#f7ff66\",\n            borderWidth: 0,\n            data: maxArr,\n            fill: \"1\",\n            radius: 1\n          }, {\n            label: \"avg\",\n            backgroundColor: \"#4a9eff\",\n            borderColor: \"#4a9eff\",\n            borderWidth: 1,\n            data: avgArr,\n            fill: \"-1\",\n            line: false,\n            radius: 5\n          }, {\n            label: \"min\",\n            backgroundColor: \"#87ff9f\",\n            borderColor: \"#87ff9f\",\n            borderWidth: 0,\n            data: minArr,\n            line: false,\n            fill: \"1\",\n            radius: 1\n          }]\n        };\n      }\n\n      if (this.state.data.forecast.daily !== undefined && \"pm25\" in this.state.data.forecast.daily) {\n        let labelArr = [],\n            avgArr = [],\n            minArr = [],\n            maxArr = [];\n\n        for (let i = 0; i < this.state.data.forecast.daily.pm25.length; i++) {\n          labelArr.push(new Date(this.state.data.forecast.daily.pm25[i].day).toString().substring(0, 10));\n          avgArr.push(this.state.data.forecast.daily.pm25[i].avg);\n          minArr.push(this.state.data.forecast.daily.pm25[i].min);\n          maxArr.push(this.state.data.forecast.daily.pm25[i].max);\n        }\n\n        pm25Data = {\n          labels: labelArr,\n          datasets: [{\n            label: \"max\",\n            backgroundColor: \"#f7ff66\",\n            borderColor: \"#f7ff66\",\n            borderWidth: 0,\n            data: maxArr,\n            fill: \"1\",\n            radius: 1\n          }, {\n            label: \"avg\",\n            backgroundColor: \"#4a9eff\",\n            borderColor: \"#4a9eff\",\n            borderWidth: 1,\n            data: avgArr,\n            fill: \"-1\",\n            line: false,\n            radius: 5\n          }, {\n            label: \"min\",\n            backgroundColor: \"#87ff9f\",\n            borderColor: \"#87ff9f\",\n            borderWidth: 0,\n            data: minArr,\n            line: false,\n            fill: \"1\",\n            radius: 1\n          }]\n        };\n      }\n\n      if (this.state.data.forecast.daily !== undefined && \"uvi\" in this.state.data.forecast.daily) {\n        let labelArr = [],\n            avgArr = [],\n            minArr = [],\n            maxArr = [];\n\n        for (let i = 0; i < this.state.data.forecast.daily.uvi.length; i++) {\n          labelArr.push(new Date(this.state.data.forecast.daily.uvi[i].day).toString().substring(0, 10));\n          avgArr.push(this.state.data.forecast.daily.uvi[i].avg);\n          minArr.push(this.state.data.forecast.daily.uvi[i].min);\n          maxArr.push(this.state.data.forecast.daily.uvi[i].max);\n        }\n\n        uviData = {\n          labels: labelArr,\n          datasets: [{\n            label: \"max\",\n            backgroundColor: \"#f7ff66\",\n            borderColor: \"#f7ff66\",\n            borderWidth: 0,\n            data: maxArr,\n            fill: \"1\",\n            radius: 1\n          }, {\n            label: \"avg\",\n            backgroundColor: \"#4a9eff\",\n            borderColor: \"#4a9eff\",\n            borderWidth: 1,\n            data: avgArr,\n            fill: \"-1\",\n            line: false,\n            radius: 5\n          }, {\n            label: \"min\",\n            backgroundColor: \"#87ff9f\",\n            borderColor: \"#87ff9f\",\n            borderWidth: 0,\n            data: minArr,\n            line: false,\n            fill: \"1\",\n            radius: 1\n          }]\n        };\n      }\n    }\n\n    const mapOptions = [{\n      key: \"Climate Score\",\n      text: \"Climate Scoreâ„¢\",\n      value: \"Climate Score\"\n    }, {\n      key: \"Air Quality Index\",\n      text: \"Air Quality Index\",\n      value: \"Air Quality Index\"\n    }];\n    const darkTheme = createMuiTheme({\n      palette: {\n        type: \"dark\"\n      }\n    });\n    let saveDisabled;\n\n    if (this.state.data !== false && this.props.locations !== [] && this.props.locations.some(loc => loc.name === this.state.data.city.name)) {\n      saveDisabled = true;\n    } else {\n      saveDisabled = false;\n    }\n\n    let showAqiTable = this.state.modalOpen;\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: darkTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"aqiTable\",\n      src: aqiTable,\n      alt: \"aqiTable\",\n      style: {\n        display: showAqiTable\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      container: true,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n      ref: search => this._search = search,\n      onSelect: this.handleSubmit,\n      inputStyle: {\n        background: \"rgba(0, 0, 0, 0.3)\",\n        color: \"#FFFFFF\",\n        \"border-radius\": \"1px\"\n      },\n      placeholder: \"\\uD83D\\uDD0E Search\",\n      suggestionsStyles: {\n        background: \"none\",\n        \"border-radius\": \"1px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      ref: map => this._map = map,\n      google: this.props.google,\n      styles: this.state.mapStyle,\n      disableDefaultUI: true,\n      streetViewControl: true,\n      zoomControl: true,\n      mapTypeControl: true,\n      mapTypeControlOptions: {\n        position: this.props.google.maps.ControlPosition.TOP_CENTER\n      },\n      zoomControlOptions: {\n        style: this.props.google.maps.ZoomControlStyle.DEFAUL,\n        position: this.props.google.maps.ControlPosition.LEFT_CENTER\n      },\n      streetViewControlOptions: {\n        position: this.props.google.maps.ControlPosition.LEFT_CENTER\n      },\n      onCenterChanged: () => {},\n      initialCenter: this.state.coords,\n      center: this.state.coords,\n      onClick: this.mapCLicked,\n      zoom: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      closeOnChange: true,\n      inline: true,\n      options: mapOptions,\n      onChange: this.labelClicked,\n      defaultValue: mapOptions[1].value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 21\n      }\n    })), this.state.showAQI ? /*#__PURE__*/React.createElement(Markers, {\n      onClick: this.onMarkerClick,\n      onMouseover: this.mouseEnterHandler,\n      onMouseout: this.mouseLeaveHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 21\n      }\n    }) : null, !this.state.showAQI ? this.renderClimateScores() : null, /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      maxWidth: 175,\n      onMouseover: () => this.showInfo(),\n      style: {\n        \"background-color\": \"#000000\"\n      },\n      visible: this.state.showInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 23\n      }\n    }, this.state.showInfo ? this.state.activeMarker.info.station.name : null, \" \")))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 15\n      }\n    }, this.state.activeCSMarker ? /*#__PURE__*/React.createElement(Card, {\n      variant: \"outlined\",\n      className: 'detail-card',\n      style: {\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      style: {\n        color: climColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 23\n      }\n    }, this.state.activeCSMarker !== false ? \"Climate Score: \" + this.state.activeCSMarker.score.ClimateScore : null), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 23\n      }\n    }, this.state.activeCSMarker !== false ? this.state.address : null), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"clim-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 25\n      }\n    }, this.state.activeCSMarker.score.DroughtScore)), /*#__PURE__*/React.createElement(Doughnut, {\n      data: droughtData,\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: \"Drought Score\",\n          fontSize: 18,\n          fontColor: \"#FFFFFF\"\n        },\n        legend: {\n          display: false\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"clim-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 25\n      }\n    }, this.state.activeCSMarker.score.StormScore)), /*#__PURE__*/React.createElement(Doughnut, {\n      data: stormData,\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: \"Storm Score\",\n          fontSize: 18,\n          fontColor: \"#FFFFFF\"\n        },\n        legend: {\n          display: false\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"clim-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 25\n      }\n    }, this.state.activeCSMarker.score.TempScore)), /*#__PURE__*/React.createElement(Doughnut, {\n      data: tempData,\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: \"Temperature Score\",\n          fontSize: 18,\n          fontColor: \"#FFFFFF\"\n        },\n        legend: {\n          display: false\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"clim-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 25\n      }\n    }, this.state.activeCSMarker.score.FireScore)), /*#__PURE__*/React.createElement(Doughnut, {\n      data: fireData,\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: \"Fire Score\",\n          fontSize: 18,\n          fontColor: \"#FFFFFF\"\n        },\n        legend: {\n          display: false\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"clim-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 25\n      }\n    }, this.state.activeCSMarker.score.SeaLevelScore)), /*#__PURE__*/React.createElement(Doughnut, {\n      data: seaData,\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: \"Sea Level Score\",\n          fontSize: 18,\n          fontColor: \"#FFFFFF\"\n        },\n        legend: {\n          display: false\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 23\n      }\n    }))) : null, !this.state.showUserLocations && this.state.showAQI ? /*#__PURE__*/React.createElement(Card, {\n      className: 'detail-card',\n      variant: \"outlined\",\n      style: {\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"next2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"go-and-back\",\n      onClick: this.showMyList,\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowForwardIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      style: {\n        color: aqiColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 23\n      }\n    }, this.state.data !== false ? \"Air Quality Index: \" + this.state.data.aqi : null, this.state.data !== false ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 27\n      }\n    }, \" \", /*#__PURE__*/React.createElement(IconButton, {\n      className: \"help-icon\",\n      onMouseOver: () => this.openModal(),\n      onMouseOut: () => this.handleModalClose(),\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(HelpOutlineIcon, {\n      style: {\n        color: \"rgba(255, 255, 255, 0.5)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 31\n      }\n    }))) : null), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 23\n      }\n    }, this.state.data !== false ? this.state.data.city.name : null), /*#__PURE__*/React.createElement(Typography, {\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 23\n      }\n    }, this.state.data !== false ? +\"\" + -hours + \" hrs & \" + -minutes + \" mins ago - \" + this.state.data.time.s : null), this.state.data !== false && this.state.data.forecast.daily !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: o3Data,\n      options: {\n        responsive: true,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontColor: \"white\"\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontColor: \"white\"\n            }\n          }]\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: true,\n          callbacks: {\n            label: function (tooltipItem) {\n              return Number(tooltipItem.yLabel) + \" Âµg/mÂ³\";\n            }\n          },\n          displayColors: true\n        },\n        title: {\n          display: true,\n          text: \"Ozone (O3) Forecast\",\n          fontSize: 12,\n          fontColor: \"#FFFFFF\"\n        },\n        legend: {\n          display: false,\n          position: \"top\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      data: pm10Data,\n      options: {\n        responsive: true,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontColor: \"white\"\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontColor: \"white\"\n            }\n          }]\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          callbacks: {\n            label: function (tooltipItem) {\n              return Number(tooltipItem.yLabel) + \" Âµg/mÂ³\";\n            }\n          },\n          displayColors: true\n        },\n        title: {\n          display: true,\n          text: \"Large Particles (pm10 Forecast)\",\n          fontSize: 12,\n          fontColor: \"#FFFFFF\"\n        },\n        legend: {\n          display: false,\n          position: \"top\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      data: pm25Data,\n      options: {\n        responsive: true,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontColor: \"white\"\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontColor: \"white\"\n            }\n          }]\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          callbacks: {\n            label: function (tooltipItem) {\n              return Number(tooltipItem.yLabel) + \" Âµg/mÂ³\";\n            }\n          },\n          displayColors: true\n        },\n        title: {\n          display: true,\n          text: \"Small Particles (pm2.5 Forecast)\",\n          fontSize: 12,\n          fontColor: \"#FFFFFF\"\n        },\n        legend: {\n          display: false,\n          position: \"top\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      data: uviData,\n      options: {\n        responsive: true,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontColor: \"white\"\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontColor: \"white\"\n            }\n          }]\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          callbacks: {\n            label: function (tooltipItem) {\n              return Number(tooltipItem.yLabel) + \" UV\";\n            }\n          },\n          displayColors: true\n        },\n        title: {\n          display: true,\n          text: \"Ultra Violet Index (UVI Forecast)\",\n          fontSize: 12,\n          fontColor: \"#FFFFFF\"\n        },\n        legend: {\n          display: false,\n          position: \"top\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 27\n      }\n    }, \"Welcome!\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1148,\n        columnNumber: 27\n      }\n    }, \"To use this app, click any pin on the map to view detailed information about that location.\"))), /*#__PURE__*/React.createElement(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 23\n      }\n    }, this.state.data !== false ? /*#__PURE__*/React.createElement(IconButton, {\n      className: \"upload-icon\",\n      disabled: saveDisabled,\n      onClick: this.addLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SaveAltIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 29\n      }\n    })) : null))) : null, this.state.showUserLocations ? /*#__PURE__*/React.createElement(Card, {\n      className: \"detail-card\",\n      variant: \"outlined\",\n      style: {\n        overflow: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      vcolor: \"textSecondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 23\n      }\n    }, \"Saved Locations\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1177,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.showStats,\n      className: \"go-and-back\",\n      color: \"white\",\n      \"aria-label\": \"next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1184,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(UserLocations, {\n      locations: this.state.myLocations,\n      clicked: this.goToLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 23\n      }\n    }))) : null)))));\n  }\n\n}\ndocument.body.style = \"background: #424242;\";\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    locations: state.locations,\n    stats: state.stats,\n    search: state.search\n  };\n};\n\nconst mapDispatchToProps = {\n  createLocationSuccess\n};\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: \"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\"\n})(ClimateMap);\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedContainer);","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/ClimateMap.js"],"names":["React","Component","GoogleApiWrapper","Map","Marker","InfoWindow","GooglePlacesAutocomplete","Geocode","Grid","Dropdown","mapStyles","Markers","Line","Doughnut","UserLocations","createLocationSuccess","connect","Card","CardActions","CardContent","Typography","createMuiTheme","ThemeProvider","ArrowForwardIosIcon","ArrowBackIosIcon","IconButton","SaveAltIcon","HelpOutlineIcon","aqiTable","ClimateMap","constructor","state","searchText","showClimateScore","coords","lat","lng","address","allScores","showAQI","hoveredPinStat","hoveredCoords","showInfo","activeMarker","activeCSMarker","data","markersRendered","showUserLocations","hovered","myLocations","saveDisabled","modalOpen","mapStyle","mouseEnterHandler","marker","e","setState","mouseLeaveHandler","onTimeout","fetch","info","lon","then","resp","json","clearTimer","clearTimeout","timer","onMarkerDragEnd","coord","latLng","newLat","newLon","_score","_map","map","setCenter","setApiKey","fromLatLng","response","newAddress","results","formatted_address","error","console","aqi","handleSubmit","value","fromAddress","description","geometry","location","_search","clearValue","method","headers","ClimateScore","DroughtScore","FireScore","SeaLevelScore","StormScore","TempScore","catch","err","locationData","position","renderClimateScores","props","climateScores","score","numberString","toString","google","iw","ih","url","anchor","maps","Point","size","Size","scaledSize","labelClicked","nativeEvent","target","innerHTML","mouseOut","onMarkerClick","onMarkerHover","addLocation","auth","alert","newLocation","name","city","user_id","id","geo","reqObj","body","JSON","stringify","goToLocation","showMyList","showStats","openModal","handleModalClose","componentWillUnmount","componentDidUpdate","setTimeout","componentDidMount","navigator","geolocation","getCurrentPosition","latitude","longitude","currentLocation","log","render","aqiColor","climColor","o3Data","uviData","pm10Data","pm25Data","days","hours","minutes","droughtData","fireData","seaData","stormData","tempData","datasets","backgroundColor","hoverBackgroundColor","now","Date","getTime","newDate","time","iso","distance","Math","floor","forecast","daily","undefined","labelArr","avgArr","minArr","maxArr","i","o3","length","push","day","substring","avg","min","max","labels","label","borderColor","borderWidth","fill","radius","line","pm10","pm25","uvi","mapOptions","key","text","darkTheme","palette","type","locations","some","loc","showAqiTable","display","search","background","color","ControlPosition","TOP_CENTER","style","ZoomControlStyle","DEFAUL","LEFT_CENTER","mapCLicked","station","overflow","responsive","title","fontSize","fontColor","legend","s","scales","yAxes","ticks","beginAtZero","xAxes","tooltips","mode","intersect","callbacks","tooltipItem","Number","yLabel","displayColors","document","mapStateToProps","stats","mapDispatchToProps","WrappedContainer","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper, Map, Marker, InfoWindow } from \"google-maps-react\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport \"react-google-places-autocomplete/dist/index.min.css\";\nimport Geocode from \"react-geocode\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport mapStyles from \"./mapStyles\";\nimport Markers from \"./Markers\";\nimport { Line, Doughnut } from \"react-chartjs-2\";\nimport UserLocations from \"./UserLocations\";\nimport { createLocationSuccess } from \"../actions/location\";\nimport { connect } from \"react-redux\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport aqiTable from \"../images/aqiTable.png\";\n\nexport class ClimateMap extends Component {\n  constructor() {\n    super();\n    this.timer = null;\n  }\n  state = {\n    searchText: \"\",\n    showClimateScore: false,\n    coords: {\n      lat: -23.304354,\n      lng: 151.916417,\n    },\n    address: \"Wilson Island, Australia\",\n    allScores: false,\n    showAQI: true,\n    hoveredPinStat: {},\n    hoveredCoords: {\n      lat: \"\",\n      lng: \"\",\n    },\n    showInfo: false,\n    activeMarker: {},\n    activeCSMarker: false,\n    data: false,\n    markersRendered: false,\n    showUserLocations: false,\n    hovered: false,\n    myLocations: [],\n    saveDisabled: false,\n    modalOpen: \"none\",\n    mapStyle: null,\n  };\n\n  mouseEnterHandler = (marker, e) => {\n    this.setState({ hovered: true, activeMarker: marker });\n  };\n\n  mouseLeaveHandler = (marker) => {\n    this.setState({ hovered: false });\n  };\n\n  componentWillUnmount() {\n    this.clearTimer();\n  }\n\n  onTimeout = () => {\n    fetch(\n      `https://api.waqi.info/feed/geo:${this.state.activeMarker.info.lat};${this.state.activeMarker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`\n    )\n      .then((resp) => resp.json())\n      .then((data) => {\n        if (this.state.showUserLocations) {\n          this.setState({\n            data: data.data,\n            showUserLocations: false,\n          });\n        } else {\n          this.setState({\n            data: data.data,\n          });\n        }\n      });\n  };\n\n  clearTimer = () => {\n    clearTimeout(this.timer);\n  };\n\n  componentDidUpdate() {\n    if (this.state.hovered) {\n      this.timer = setTimeout(this.onTimeout, 500);\n    } else {\n      this.clearTimer();\n    }\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      let currentLocation = { lat: lat, lng: lng };\n      this.setState({\n        coords: currentLocation,\n      });\n    });\n    console.log(this.props)\n  }\n\n  onMarkerDragEnd = (coord) => {\n    const { latLng } = coord;\n    const newLat = latLng.lat();\n    const newLon = latLng.lng();\n    this._score.state.coords.lat = newLat;\n    this._score.state.coords.lng = newLon;\n    this._map.map.setCenter({ lat: newLat, lng: newLon });\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromLatLng(newLat, newLon).then(\n      (response) => {\n        const newAddress = response.results[0].formatted_address;\n        this._score.state.address = newAddress;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n    fetch(\n      `https://api.waqi.info/feed/geo:${newLat};${newLon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`\n    )\n      .then((resp) => resp.json())\n      .then((data) => {\n        this._score.state.aqi = data.data.aqi;\n      });\n  };\n\n  handleSubmit = (value) => {\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromAddress(`${value.description}`).then((response) => {\n      const { lat, lng } = response.results[0].geometry.location;\n\n      this.setState({\n        coords: {\n          lat: lat,\n          lng: lng,\n        },\n      });\n      this._map.map.setCenter({ lat: lat, lng: lng });\n      this._search.clearValue();\n      fetch(`https://climate-score.p.rapidapi.com/${lat}/${lng}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"climate-score.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"c5855f8358mshe884588b34ae70ep1a1627jsn5e1e97c23a80\",\n        },\n      })\n        .then((resp) => resp.json())\n        .then((data) => {\n          this.setState({\n            allScores: {\n              ClimateScore: data.ClimateScore,\n              DroughtScore: data.DroughtScore,\n              FireScore: data.FireScore,\n              SeaLevelScore: data.SeaLevelScore,\n              StormScore: data.StormScore,\n              TempScore: data.TempScore,\n            },\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            allScores: false,\n          });\n        });\n      Geocode.fromLatLng(lat, lng).then(\n        (response) => {},\n        (error) => {\n          console.error(error);\n        }\n      );\n      fetch(\n        `https://api.waqi.info/feed/geo:${lat};${lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`\n      )\n        .then((resp) => resp.json())\n        .then((locationData) => {\n          this.setState({\n            data: locationData.data,\n          });\n        });\n    });\n  };\n\n  showClimateScore = (marker) => {\n    const newLat = marker.position.lat;\n    const newLon = marker.position.lng;\n    Geocode.setApiKey(\"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\");\n    Geocode.fromLatLng(newLat, newLon).then((response) => {\n      const newAddress = response.results[0].formatted_address;\n      this.setState({\n        address: newAddress,\n        activeCSMarker: marker,\n      });\n    });\n  };\n\n  renderClimateScores = () => {\n    return this.props.climateScores.map((score) => {\n      const numberString = score.ClimateScore.toString();\n      const google = this.props.google;\n      let iw = 83,\n        ih = 107;\n      return (\n        <Marker\n          score={score}\n          onClick={this.showClimateScore}\n          position={{ lat: score.lat, lng: score.lng }}\n          icon={{\n            url: `https://waqi.info/mapicon/${numberString}.50.png`,\n            anchor: new google.maps.Point(iw / 4, ih / 2 - 5),\n            size: new google.maps.Size(iw / 2, ih / 2),\n            scaledSize: new google.maps.Size(30, 40),\n          }}\n        />\n      );\n    });\n  };\n\n  labelClicked = (e) => {\n    if (e.nativeEvent.target.innerHTML === \"Climate Scoreâ„¢\") {\n      this.setState({\n        showAQI: false,\n      });\n    } else {\n      this.setState({\n        showAQI: true,\n        activeCSMarker: false,\n      });\n    }\n  };\n\n  mouseOut = (e) => {\n    this.setState({\n      showInfo: false,\n    });\n  };\n\n  onMarkerClick = (marker, e) => {\n    fetch(\n      `https://api.waqi.info/feed/geo:${marker.info.lat};${marker.info.lon}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`\n    )\n      .then((resp) => resp.json())\n      .then((data) => {\n        if (this.state.showUserLocations) {\n          this.setState({\n            data: data.data,\n            showUserLocations: false,\n          });\n        } else {\n          this.setState({\n            data: data.data,\n          });\n        }\n      });\n  };\n\n  onMarkerHover = (props, marker, e) => {\n    this.setState({\n      activeMarker: marker,\n      showInfo: true,\n    });\n  };\n\n  addLocation = () => {\n    if (this.state.auth === null){\n      alert('You must be logged in to use this feature.')\n    } else if (this.state.data !== false) {\n      const newLocation = {\n        name: this.state.data.city.name,\n        user_id: this.props.auth.id,\n        lat: this.state.data.city.geo[0],\n        lng: this.state.data.city.geo[1],\n      };\n      const reqObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newLocation),\n      };\n      fetch(\"https://myclimate.herokuapp.com/locations\", reqObj)\n        .then((resp) => resp.json())\n        .then((newLocation) => {\n          this.props.createLocationSuccess(newLocation);\n        });\n    }\n  };\n\n  goToLocation = (location) => {\n    this._map.map.setCenter({ lat: location.lat, lng: location.lng });\n    fetch(\n      `https://api.waqi.info/feed/geo:${location.lat};${location.lng}/?token=87b2bba6a5b2e26c577ffc48e297eaed82a8408c`\n    )\n      .then((resp) => resp.json())\n      .then((data) => {\n        this.setState({\n          data: data.data,\n          showUserLocations: false,\n        });\n      });\n  };\n\n  showMyList = () => {\n    this.setState({\n      showUserLocations: true,\n    });\n  };\n\n  showStats = () => {\n    this.setState({\n      showUserLocations: false,\n    });\n  };\n\n  openModal = () => {\n    this.setState({\n      modalOpen: \"block\",\n    });\n  };\n  handleModalClose = () => {\n    this.setState({\n      modalOpen: \"none\",\n    });\n  };\n\n  render() {\n    let aqiColor;\n    if (this.state.data !== false && this.state.data.aqi <= 50) {\n      aqiColor = \"#c1ff7a\";\n    } else if (this.state.data !== false && this.state.data.aqi <= 100) {\n      aqiColor = \"#ffff33\";\n    } else if (this.state.data !== false && this.state.data.aqi <= 150) {\n      aqiColor = \"#ffc570\";\n    } else if (this.state.data !== false && this.state.data.aqi <= 200) {\n      aqiColor = \"#f6685e\";\n    } else if (this.state.data !== false && this.state.data.aqi <= 300) {\n      aqiColor = \"#ea80fc\";\n    } else {\n      aqiColor = \"#b2b9e1\";\n    }\n    let climColor;\n    if (\n      this.state.activeCSMarker !== false &&\n      this.state.activeCSMarker.score.ClimateScore <= 25\n    ) {\n      climColor = \"#c1ff7a\";\n    } else if (\n      this.state.activeCSMarker !== false &&\n      this.state.activeCSMarker.score.ClimateScore <= 50\n    ) {\n      climColor = \"#ffff33\";\n    } else {\n      climColor = \"#ffc570\";\n    }\n    let o3Data;\n    let uviData;\n    let pm10Data;\n    let pm25Data;\n    let days;\n    let hours;\n    let minutes;\n    let droughtData;\n    let fireData;\n    let seaData;\n    let stormData;\n    let tempData;\n    if (this.state.activeCSMarker) {\n      droughtData = {\n        datasets: [\n          {\n            data: [\n              this.state.activeCSMarker.score.DroughtScore,\n              100 - this.state.activeCSMarker.score.DroughtScore,\n            ],\n            backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n            hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          },\n        ],\n      };\n      fireData = {\n        datasets: [\n          {\n            data: [\n              this.state.activeCSMarker.score.FireScore,\n              100 - this.state.activeCSMarker.score.FireScore,\n            ],\n            backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n            hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          },\n        ],\n      };\n      seaData = {\n        datasets: [\n          {\n            data: [\n              this.state.activeCSMarker.score.SeaLevelScore,\n              100 - this.state.activeCSMarker.score.SeaLevelScore,\n            ],\n            backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n            hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          },\n        ],\n      };\n      stormData = {\n        datasets: [\n          {\n            data: [\n              this.state.activeCSMarker.score.StormScore,\n              100 - this.state.activeCSMarker.score.StormScore,\n            ],\n            backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n            hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          },\n        ],\n      };\n      tempData = {\n        datasets: [\n          {\n            data: [\n              this.state.activeCSMarker.score.TempScore,\n              100 - this.state.activeCSMarker.score.TempScore,\n            ],\n            backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n            hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          },\n        ],\n      };\n    }\n    if (this.state.data !== false) {\n      let now = new Date().getTime();\n      let newDate = new Date(this.state.data.time.iso).getTime();\n      let distance = newDate - now;\n      days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      if (\n        this.state.data.forecast.daily !== undefined &&\n        \"o3\" in this.state.data.forecast.daily\n      ) {\n        let labelArr = [],\n          avgArr = [],\n          minArr = [],\n          maxArr = [];\n        for (let i = 0; i < this.state.data.forecast.daily.o3.length; i++) {\n          labelArr.push(\n            new Date(this.state.data.forecast.daily.o3[i].day)\n              .toString()\n              .substring(0, 10)\n          );\n          avgArr.push(this.state.data.forecast.daily.o3[i].avg);\n          minArr.push(this.state.data.forecast.daily.o3[i].min);\n          maxArr.push(this.state.data.forecast.daily.o3[i].max);\n        }\n        o3Data = {\n          labels: labelArr,\n          datasets: [\n            {\n              label: \"max\",\n              backgroundColor: \"#f7ff66\",\n              borderColor: \"#f7ff66\",\n              borderWidth: 0,\n              data: maxArr,\n              fill: \"1\",\n              radius: 1,\n            },\n            {\n              label: \"avg\",\n              backgroundColor: \"#4a9eff\",\n              borderColor: \"#4a9eff\",\n              borderWidth: 1,\n              data: avgArr,\n              fill: \"-1\",\n              line: false,\n              radius: 5,\n            },\n            {\n              label: \"min\",\n              backgroundColor: \"#87ff9f\",\n              borderColor: \"#87ff9f\",\n              borderWidth: 0,\n              data: minArr,\n              line: false,\n              fill: \"1\",\n              radius: 1,\n            },\n          ],\n        };\n      }\n      if (\n        this.state.data.forecast.daily !== undefined &&\n        \"pm10\" in this.state.data.forecast.daily\n      ) {\n        let labelArr = [],\n          avgArr = [],\n          minArr = [],\n          maxArr = [];\n        for (let i = 0; i < this.state.data.forecast.daily.pm10.length; i++) {\n          labelArr.push(\n            new Date(this.state.data.forecast.daily.pm10[i].day)\n              .toString()\n              .substring(0, 10)\n          );\n          avgArr.push(this.state.data.forecast.daily.pm10[i].avg);\n          minArr.push(this.state.data.forecast.daily.pm10[i].min);\n          maxArr.push(this.state.data.forecast.daily.pm10[i].max);\n        }\n        pm10Data = {\n          labels: labelArr,\n          datasets: [\n            {\n              label: \"max\",\n              backgroundColor: \"#f7ff66\",\n              borderColor: \"#f7ff66\",\n              borderWidth: 0,\n              data: maxArr,\n              fill: \"1\",\n              radius: 1,\n            },\n            {\n              label: \"avg\",\n              backgroundColor: \"#4a9eff\",\n              borderColor: \"#4a9eff\",\n              borderWidth: 1,\n              data: avgArr,\n              fill: \"-1\",\n              line: false,\n              radius: 5,\n            },\n            {\n              label: \"min\",\n              backgroundColor: \"#87ff9f\",\n              borderColor: \"#87ff9f\",\n              borderWidth: 0,\n              data: minArr,\n              line: false,\n              fill: \"1\",\n              radius: 1,\n            },\n          ],\n        };\n      }\n      if (\n        this.state.data.forecast.daily !== undefined &&\n        \"pm25\" in this.state.data.forecast.daily\n      ) {\n        let labelArr = [],\n          avgArr = [],\n          minArr = [],\n          maxArr = [];\n        for (let i = 0; i < this.state.data.forecast.daily.pm25.length; i++) {\n          labelArr.push(\n            new Date(this.state.data.forecast.daily.pm25[i].day)\n              .toString()\n              .substring(0, 10)\n          );\n          avgArr.push(this.state.data.forecast.daily.pm25[i].avg);\n          minArr.push(this.state.data.forecast.daily.pm25[i].min);\n          maxArr.push(this.state.data.forecast.daily.pm25[i].max);\n        }\n        pm25Data = {\n          labels: labelArr,\n          datasets: [\n            {\n              label: \"max\",\n              backgroundColor: \"#f7ff66\",\n              borderColor: \"#f7ff66\",\n              borderWidth: 0,\n              data: maxArr,\n              fill: \"1\",\n              radius: 1,\n            },\n            {\n              label: \"avg\",\n              backgroundColor: \"#4a9eff\",\n              borderColor: \"#4a9eff\",\n              borderWidth: 1,\n              data: avgArr,\n              fill: \"-1\",\n              line: false,\n              radius: 5,\n            },\n            {\n              label: \"min\",\n              backgroundColor: \"#87ff9f\",\n              borderColor: \"#87ff9f\",\n              borderWidth: 0,\n              data: minArr,\n              line: false,\n              fill: \"1\",\n              radius: 1,\n            },\n          ],\n        };\n      }\n      if (\n        this.state.data.forecast.daily !== undefined &&\n        \"uvi\" in this.state.data.forecast.daily\n      ) {\n        let labelArr = [],\n          avgArr = [],\n          minArr = [],\n          maxArr = [];\n        for (let i = 0; i < this.state.data.forecast.daily.uvi.length; i++) {\n          labelArr.push(\n            new Date(this.state.data.forecast.daily.uvi[i].day)\n              .toString()\n              .substring(0, 10)\n          );\n          avgArr.push(this.state.data.forecast.daily.uvi[i].avg);\n          minArr.push(this.state.data.forecast.daily.uvi[i].min);\n          maxArr.push(this.state.data.forecast.daily.uvi[i].max);\n        }\n        uviData = {\n          labels: labelArr,\n          datasets: [\n            {\n              label: \"max\",\n              backgroundColor: \"#f7ff66\",\n              borderColor: \"#f7ff66\",\n              borderWidth: 0,\n              data: maxArr,\n              fill: \"1\",\n              radius: 1,\n            },\n            {\n              label: \"avg\",\n              backgroundColor: \"#4a9eff\",\n              borderColor: \"#4a9eff\",\n              borderWidth: 1,\n              data: avgArr,\n              fill: \"-1\",\n              line: false,\n              radius: 5,\n            },\n            {\n              label: \"min\",\n              backgroundColor: \"#87ff9f\",\n              borderColor: \"#87ff9f\",\n              borderWidth: 0,\n              data: minArr,\n              line: false,\n              fill: \"1\",\n              radius: 1,\n            },\n          ],\n        };\n      }\n    }\n    const mapOptions = [\n      {\n        key: \"Climate Score\",\n        text: \"Climate Scoreâ„¢\",\n        value: \"Climate Score\",\n      },\n      {\n        key: \"Air Quality Index\",\n        text: \"Air Quality Index\",\n        value: \"Air Quality Index\",\n      },\n    ];\n    const darkTheme = createMuiTheme({\n      palette: {\n        type: \"dark\",\n      },\n    });\n    let saveDisabled;\n    if (\n      this.state.data !== false &&\n      this.props.locations !== [] &&\n      this.props.locations.some((loc) => loc.name === this.state.data.city.name)\n    ) {\n      saveDisabled = true;\n    } else {\n      saveDisabled = false;\n    }\n    let showAqiTable = this.state.modalOpen;\n    return (\n      <ThemeProvider theme={darkTheme}>\n        <div className=\"nav\">\n          <img\n            id=\"aqiTable\"\n            src={aqiTable}\n            alt=\"aqiTable\"\n            style={{ display: showAqiTable }}\n          ></img>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            container\n            spacing={0}\n          >\n            <div className=\"search\">\n              <GooglePlacesAutocomplete\n                ref={(search) => (this._search = search)}\n                onSelect={this.handleSubmit}\n                inputStyle={{\n                  background: \"rgba(0, 0, 0, 0.3)\",\n                  color: \"#FFFFFF\",\n                  \"border-radius\": \"1px\",\n                }}\n                placeholder=\"ðŸ”Ž Search\"\n                suggestionsStyles={{\n                  background: \"none\",\n                  \"border-radius\": \"1px\",\n                }}\n              />\n            </div>\n            <Grid item xs={8}>\n              <div className=\"location\">\n                <Map\n                  ref={(map) => (this._map = map)}\n                  google={this.props.google}\n                  styles={this.state.mapStyle}\n                  disableDefaultUI={true}\n                  streetViewControl={true}\n                  zoomControl={true}\n                  mapTypeControl={true}\n                  mapTypeControlOptions={{\n                    position: this.props.google.maps.ControlPosition.TOP_CENTER,\n                  }}\n                  zoomControlOptions={{\n                    style: this.props.google.maps.ZoomControlStyle.DEFAUL,\n                    position: this.props.google.maps.ControlPosition\n                      .LEFT_CENTER,\n                  }}\n                  streetViewControlOptions={{\n                    position: this.props.google.maps.ControlPosition\n                      .LEFT_CENTER,\n                  }}\n                  onCenterChanged={() => {}}\n                  initialCenter={this.state.coords}\n                  center={this.state.coords}\n                  onClick={this.mapCLicked}\n                  zoom={8}\n                >\n                  <div className=\"filter\">\n                    <Dropdown\n                      closeOnChange\n                      inline\n                      options={mapOptions}\n                      onChange={this.labelClicked}\n                      defaultValue={mapOptions[1].value}\n                    />\n                  </div>\n                  {this.state.showAQI ? (\n                    <Markers\n                      onClick={this.onMarkerClick}\n                      onMouseover={this.mouseEnterHandler}\n                      onMouseout={this.mouseLeaveHandler}\n                    ></Markers>\n                  ) : null}\n                  {!this.state.showAQI ? this.renderClimateScores() : null}\n                  <InfoWindow\n                    marker={this.state.activeMarker}\n                    maxWidth={175}\n                    onMouseover={() => this.showInfo()}\n                    style={{ \"background-color\": \"#000000\" }}\n                    visible={this.state.showInfo}\n                  >\n                    <div>\n                      <h4>\n                        {this.state.showInfo\n                          ? this.state.activeMarker.info.station.name\n                          : null}{\" \"}\n                      </h4>\n                    </div>\n                  </InfoWindow>\n                </Map>\n              </div>\n            </Grid>\n            <Grid item xs={4}>\n              <div className=\"hello\">\n                {this.state.activeCSMarker ? (\n                  <Card\n                    variant=\"outlined\"\n                    className={'detail-card'}\n                    style={{ overflow: \"auto\" }}\n                  >\n                    <CardContent>\n                      <Typography\n                        variant=\"h4\"\n                        component=\"h2\"\n                        style={{ color: climColor }}\n                      >\n                        {this.state.activeCSMarker !== false\n                          ? \"Climate Score: \" +\n                            this.state.activeCSMarker.score.ClimateScore\n                          : null}\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"h2\">\n                        {this.state.activeCSMarker !== false\n                          ? this.state.address\n                          : null}\n                      </Typography>\n                      <div class=\"clim-score\">\n                        <h1>{this.state.activeCSMarker.score.DroughtScore}</h1>\n                      </div>\n                      <Doughnut\n                        data={droughtData}\n                        options={{\n                          responsive: true,\n                          title: {\n                            display: true,\n                            text: \"Drought Score\",\n                            fontSize: 18,\n                            fontColor: \"#FFFFFF\",\n                          },\n                          legend: {\n                            display: false,\n                          },\n                        }}\n                      />\n                      <div class=\"clim-score\">\n                        <h1>{this.state.activeCSMarker.score.StormScore}</h1>\n                      </div>\n                      <Doughnut\n                        data={stormData}\n                        options={{\n                          responsive: true,\n                          title: {\n                            display: true,\n                            text: \"Storm Score\",\n                            fontSize: 18,\n                            fontColor: \"#FFFFFF\",\n                          },\n                          legend: {\n                            display: false,\n                          },\n                        }}\n                      />\n                      <div class=\"clim-score\">\n                        <h1>{this.state.activeCSMarker.score.TempScore}</h1>\n                      </div>\n                      <Doughnut\n                        data={tempData}\n                        options={{\n                          responsive: true,\n                          title: {\n                            display: true,\n                            text: \"Temperature Score\",\n                            fontSize: 18,\n                            fontColor: \"#FFFFFF\",\n                          },\n                          legend: {\n                            display: false,\n                          },\n                        }}\n                      />\n                      <div class=\"clim-score\">\n                        <h1>{this.state.activeCSMarker.score.FireScore}</h1>\n                      </div>\n                      <Doughnut\n                        data={fireData}\n                        options={{\n                          responsive: true,\n                          title: {\n                            display: true,\n                            text: \"Fire Score\",\n                            fontSize: 18,\n                            fontColor: \"#FFFFFF\",\n                          },\n                          legend: {\n                            display: false,\n                          },\n                        }}\n                      />\n                      <div class=\"clim-score\">\n                        <h1>{this.state.activeCSMarker.score.SeaLevelScore}</h1>\n                      </div>\n                      <Doughnut\n                        data={seaData}\n                        options={{\n                          responsive: true,\n                          title: {\n                            display: true,\n                            text: \"Sea Level Score\",\n                            fontSize: 18,\n                            fontColor: \"#FFFFFF\",\n                          },\n                          legend: {\n                            display: false,\n                          },\n                        }}\n                      />\n                    </CardContent>\n                  </Card>\n                ) : null}\n                {!this.state.showUserLocations && this.state.showAQI ? (\n                  <Card\n                    className={'detail-card'}\n                    variant=\"outlined\"\n                    style={{ overflow: \"auto\" }}\n                  >\n                    <CardContent>\n                      <div className=\"next2\">\n                        <IconButton\n                          className={\"go-and-back\"}\n                          onClick={this.showMyList}\n                          color=\"white\"\n                        >\n                          <ArrowForwardIosIcon />\n                        </IconButton>\n                      </div>\n                      <Typography\n                        variant=\"h5\"\n                        component=\"h2\"\n                        style={{ color: aqiColor }}\n                      >\n                        {this.state.data !== false\n                          ? \"Air Quality Index: \" + this.state.data.aqi\n                          : null}\n                        {this.state.data !== false ? (\n                          <span>\n                            {\" \"}\n                            <IconButton\n                              className={\"help-icon\"}\n                              onMouseOver={() => this.openModal()}\n                              onMouseOut={() => this.handleModalClose()}\n                              color=\"white\"\n                            >\n                              <HelpOutlineIcon\n                                style={{ color: \"rgba(255, 255, 255, 0.5)\" }}\n                              />\n                            </IconButton>\n                          </span>\n                        ) : null}\n                      </Typography>\n                      <Typography variant=\"h4\" component=\"h2\">\n                        {this.state.data !== false\n                          ? this.state.data.city.name\n                          : null}\n                      </Typography>\n                      <Typography color=\"textSecondary\">\n                        {this.state.data !== false\n                          ? +\"\" +\n                            -hours +\n                            \" hrs & \" +\n                            -minutes +\n                            \" mins ago - \" +\n                            this.state.data.time.s\n                          : null}\n                      </Typography>\n                      {this.state.data !== false &&\n                      this.state.data.forecast.daily !== undefined ? (\n                        <div>\n                          <Line\n                            data={o3Data}\n                            options={{\n                              responsive: true,\n                              scales: {\n                                yAxes: [\n                                  {\n                                    ticks: {\n                                      beginAtZero: true,\n                                      fontColor: \"white\",\n                                    },\n                                  },\n                                ],\n                                xAxes: [\n                                  {\n                                    ticks: {\n                                      beginAtZero: true,\n                                      fontColor: \"white\",\n                                    },\n                                  },\n                                ],\n                              },\n                              tooltips: {\n                                mode: \"index\",\n                                intersect: true,\n                                callbacks: {\n                                  label: function (tooltipItem) {\n                                    return (\n                                      Number(tooltipItem.yLabel) + \" Âµg/mÂ³\"\n                                    );\n                                  },\n                                },\n                                displayColors: true,\n                              },\n                              title: {\n                                display: true,\n                                text: \"Ozone (O3) Forecast\",\n                                fontSize: 12,\n                                fontColor: \"#FFFFFF\",\n                              },\n                              legend: {\n                                display: false,\n                                position: \"top\",\n                              },\n                            }}\n                          />\n                          <Line\n                            data={pm10Data}\n                            options={{\n                              responsive: true,\n                              scales: {\n                                yAxes: [\n                                  {\n                                    ticks: {\n                                      beginAtZero: true,\n                                      fontColor: \"white\",\n                                    },\n                                  },\n                                ],\n                                xAxes: [\n                                  {\n                                    ticks: {\n                                      beginAtZero: true,\n                                      fontColor: \"white\",\n                                    },\n                                  },\n                                ],\n                              },\n                              tooltips: {\n                                mode: \"index\",\n                                intersect: false,\n                                callbacks: {\n                                  label: function (tooltipItem) {\n                                    return (\n                                      Number(tooltipItem.yLabel) + \" Âµg/mÂ³\"\n                                    );\n                                  },\n                                },\n                                displayColors: true,\n                              },\n                              title: {\n                                display: true,\n                                text: \"Large Particles (pm10 Forecast)\",\n                                fontSize: 12,\n                                fontColor: \"#FFFFFF\",\n                              },\n                              legend: {\n                                display: false,\n                                position: \"top\",\n                              },\n                            }}\n                          />\n                          <Line\n                            data={pm25Data}\n                            options={{\n                              responsive: true,\n                              scales: {\n                                yAxes: [\n                                  {\n                                    ticks: {\n                                      beginAtZero: true,\n                                      fontColor: \"white\",\n                                    },\n                                  },\n                                ],\n                                xAxes: [\n                                  {\n                                    ticks: {\n                                      beginAtZero: true,\n                                      fontColor: \"white\",\n                                    },\n                                  },\n                                ],\n                              },\n                              tooltips: {\n                                mode: \"index\",\n                                intersect: false,\n                                callbacks: {\n                                  label: function (tooltipItem) {\n                                    return (\n                                      Number(tooltipItem.yLabel) + \" Âµg/mÂ³\"\n                                    );\n                                  },\n                                },\n                                displayColors: true,\n                              },\n                              title: {\n                                display: true,\n                                text: \"Small Particles (pm2.5 Forecast)\",\n                                fontSize: 12,\n                                fontColor: \"#FFFFFF\",\n                              },\n                              legend: {\n                                display: false,\n                                position: \"top\",\n                              },\n                            }}\n                          />\n                          <Line\n                            data={uviData}\n                            options={{\n                              responsive: true,\n                              scales: {\n                                yAxes: [\n                                  {\n                                    ticks: {\n                                      beginAtZero: true,\n                                      fontColor: \"white\",\n                                    },\n                                  },\n                                ],\n                                xAxes: [\n                                  {\n                                    ticks: {\n                                      beginAtZero: true,\n                                      fontColor: \"white\",\n                                    },\n                                  },\n                                ],\n                              },\n                              tooltips: {\n                                mode: \"index\",\n                                intersect: false,\n                                callbacks: {\n                                  label: function (tooltipItem) {\n                                    return Number(tooltipItem.yLabel) + \" UV\";\n                                  },\n                                },\n                                displayColors: true,\n                              },\n                              title: {\n                                display: true,\n                                text: \"Ultra Violet Index (UVI Forecast)\",\n                                fontSize: 12,\n                                fontColor: \"#FFFFFF\",\n                              },\n                              legend: {\n                                display: false,\n                                position: \"top\",\n                              },\n                            }}\n                          />\n                        </div>\n                      ) : (\n                        <div>\n                          <h1>Welcome!</h1>\n                          <h2>To use this app, click any pin on the map to view detailed information about that location.</h2>\n                        </div>\n                      )}\n                    </CardContent>\n                    <CardActions>\n                      <div className=\"save\">\n                        {this.state.data !== false ? (\n                          <IconButton\n                            className={\"upload-icon\"}\n                            disabled={saveDisabled}\n                            onClick={this.addLocation}\n                          >\n                            <SaveAltIcon fontSize=\"large\" />\n                          </IconButton>\n                        ) : null}\n                      </div>\n                    </CardActions>\n                  </Card>\n                ) : null}\n                {this.state.showUserLocations ? (\n                  <Card\n                    className='detail-card'\n                    variant=\"outlined\"\n                    style={{ overflow: \"auto\" }}\n                  >\n                    <CardContent>\n                      <Typography vcolor=\"textSecondary\" gutterBottom>\n                        Saved Locations\n                      </Typography>\n                      <div className=\"next\">\n                        <IconButton\n                          onClick={this.showStats}\n                          className=\"go-and-back\"\n                          color=\"white\"\n                          aria-label=\"next\"\n                        >\n                          <ArrowBackIosIcon />\n                        </IconButton>\n                      </div>\n                      <UserLocations\n                        locations={this.state.myLocations}\n                        clicked={this.goToLocation}\n                      />\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\ndocument.body.style = \"background: #424242;\";\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    locations: state.locations,\n    stats: state.stats,\n    search: state.search\n  };\n};\n\nconst mapDispatchToProps = {\n  createLocationSuccess,\n};\n\nconst WrappedContainer = GoogleApiWrapper({\n  apiKey: \"AIzaSyDmc1KD6Xr80d3hduc4Q2MObw1uotQuY-8\",\n})(ClimateMap);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedContainer);\n"]},"metadata":{},"sourceType":"module"}