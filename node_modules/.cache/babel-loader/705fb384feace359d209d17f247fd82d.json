{"ast":null,"code":"import _slicedToArray from\"/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useSpring,animated}from'react-spring';var calc=function calc(x,y){return[x-window.innerWidth/2,y-window.innerHeight/2];};var trans1=function trans1(x,y){return\"translate3d(\".concat(x/10,\"px,\").concat(y/10,\"px,0)\");};var trans2=function trans2(x,y){return\"translate3d(\".concat(x/8+35,\"px,\").concat(y/8-230,\"px,0)\");};var trans3=function trans3(x,y){return\"translate3d(\".concat(x/6-250,\"px,\").concat(y/6-200,\"px,0)\");};var trans4=function trans4(x,y){return\"translate3d(\".concat(x/3.5,\"px,\").concat(y/3.5,\"px,0)\");};function LoginBG(){var _useSpring=useSpring(function(){return{xy:[0,0],config:{mass:10,tension:550,friction:140}};}),_useSpring2=_slicedToArray(_useSpring,2),props=_useSpring2[0],set=_useSpring2[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"bg-container\",onMouseMove:function onMouseMove(_ref){var x=_ref.clientX,y=_ref.clientY;return set({xy:calc(x,y)});}},/*#__PURE__*/React.createElement(animated.div,{class:\"card1\",style:{transform:props.xy.interpolate(trans1)}}),/*#__PURE__*/React.createElement(animated.div,{class:\"card2\",style:{transform:props.xy.interpolate(trans2)}}),/*#__PURE__*/React.createElement(animated.div,{class:\"card3\",style:{transform:props.xy.interpolate(trans3)}}),/*#__PURE__*/React.createElement(animated.div,{class:\"card4\",style:{transform:props.xy.interpolate(trans4)}}));}export default LoginBG;","map":{"version":3,"sources":["/Users/johnloberger/Flatiron/code/mod5/MyClimateFrontend/src/components/LoginBG.js"],"names":["React","useSpring","animated","calc","x","y","window","innerWidth","innerHeight","trans1","trans2","trans3","trans4","LoginBG","xy","config","mass","tension","friction","props","set","clientX","clientY","transform","interpolate"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,cAApC,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAIC,CAAJ,QAAU,CAACD,CAAC,CAAGE,MAAM,CAACC,UAAP,CAAoB,CAAzB,CAA4BF,CAAC,CAAGC,MAAM,CAACE,WAAP,CAAqB,CAArD,CAAV,EAAb,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACL,CAAD,CAAIC,CAAJ,8BAAyBD,CAAC,CAAG,EAA7B,eAAqCC,CAAC,CAAG,EAAzC,WAAf,CACA,GAAMK,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACN,CAAD,CAAIC,CAAJ,8BAAyBD,CAAC,CAAG,CAAJ,CAAQ,EAAjC,eAAyCC,CAAC,CAAG,CAAJ,CAAQ,GAAjD,WAAf,CACA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACP,CAAD,CAAIC,CAAJ,8BAAyBD,CAAC,CAAG,CAAJ,CAAQ,GAAjC,eAA0CC,CAAC,CAAG,CAAJ,CAAQ,GAAlD,WAAf,CACA,GAAMO,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACR,CAAD,CAAIC,CAAJ,8BAAyBD,CAAC,CAAG,GAA7B,eAAsCC,CAAC,CAAG,GAA1C,WAAf,CAEA,QAASQ,CAAAA,OAAT,EAAmB,gBACIZ,SAAS,CAAC,iBAAO,CAAEa,EAAE,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAN,CAAcC,MAAM,CAAE,CAAEC,IAAI,CAAE,EAAR,CAAYC,OAAO,CAAE,GAArB,CAA0BC,QAAQ,CAAE,GAApC,CAAtB,CAAP,EAAD,CADb,0CACVC,KADU,gBACHC,GADG,gBAEjB,mBACE,2BAAK,SAAS,CAAC,cAAf,CAA8B,WAAW,CAAE,8BAAYhB,CAAAA,CAAZ,MAAGiB,OAAH,CAAwBhB,CAAxB,MAAeiB,OAAf,OAAgCF,CAAAA,GAAG,CAAC,CAAEN,EAAE,CAAEX,IAAI,CAACC,CAAD,CAAIC,CAAJ,CAAV,CAAD,CAAnC,EAA3C,eACE,oBAAC,QAAD,CAAU,GAAV,EAAc,KAAK,CAAC,OAApB,CAA4B,KAAK,CAAE,CAAEkB,SAAS,CAAEJ,KAAK,CAACL,EAAN,CAASU,WAAT,CAAqBf,MAArB,CAAb,CAAnC,EADF,cAEE,oBAAC,QAAD,CAAU,GAAV,EAAc,KAAK,CAAC,OAApB,CAA4B,KAAK,CAAE,CAAEc,SAAS,CAAEJ,KAAK,CAACL,EAAN,CAASU,WAAT,CAAqBd,MAArB,CAAb,CAAnC,EAFF,cAGE,oBAAC,QAAD,CAAU,GAAV,EAAc,KAAK,CAAC,OAApB,CAA4B,KAAK,CAAE,CAAEa,SAAS,CAAEJ,KAAK,CAACL,EAAN,CAASU,WAAT,CAAqBb,MAArB,CAAb,CAAnC,EAHF,cAIE,oBAAC,QAAD,CAAU,GAAV,EAAc,KAAK,CAAC,OAApB,CAA4B,KAAK,CAAE,CAAEY,SAAS,CAAEJ,KAAK,CAACL,EAAN,CAASU,WAAT,CAAqBZ,MAArB,CAAb,CAAnC,EAJF,CADF,CAQD,CAED,cAAeC,CAAAA,OAAf","sourcesContent":["import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst trans1 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`\nconst trans2 = (x, y) => `translate3d(${x / 8 + 35}px,${y / 8 - 230}px,0)`\nconst trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`\nconst trans4 = (x, y) => `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n\nfunction LoginBG() {\n  const [props, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\n  return (\n    <div className=\"bg-container\" onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}>\n      <animated.div class=\"card1\" style={{ transform: props.xy.interpolate(trans1) }} />\n      <animated.div class=\"card2\" style={{ transform: props.xy.interpolate(trans2) }} />\n      <animated.div class=\"card3\" style={{ transform: props.xy.interpolate(trans3) }} />\n      <animated.div class=\"card4\" style={{ transform: props.xy.interpolate(trans4) }} />\n    </div>\n  )\n}\n\nexport default LoginBG"]},"metadata":{},"sourceType":"module"}